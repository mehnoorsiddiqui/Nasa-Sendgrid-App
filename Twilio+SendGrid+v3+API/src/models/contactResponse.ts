/**
 * Twilio SendGrid v3 APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { CustomFields2, customFields2Schema } from './customFields2';

export interface ContactResponse {
  /** ID assigned to a contact when added to the system. */
  id: string;
  /** Email of the contact. This is a reserved field. */
  email: string;
  /** Alternate emails of the contact. This is a reserved field. */
  alternateEmails: string[];
  /** First name of the contact. This is a reserved field. */
  firstName: string;
  /** Last name of the contact. This is a reserved field. */
  lastName: string;
  /** First line of address of the contact. This is a reserved field. */
  addressLine1: string;
  /** Second line of address of the contact. This is a reserved field. */
  addressLine2: string;
  /** City associated with the contact. This is a reserved field. */
  city: string;
  /** State associated with the contact. This is a reserved field. */
  stateProvinceRegion: string;
  /** Zipcode associated with the address of the contact. This is a reserved field. */
  postalCode: number;
  /** Country associated with the address of the contact. This is a reserved field. */
  country: string;
  /** IDs of all lists the contact is part of */
  listIds?: string[];
  customFields: CustomFields2;
  /** IDs of all segments the contact is part of */
  segmentIds?: string[];
}

export const contactResponseSchema: Schema<ContactResponse> = object({
  id: ['id', string()],
  email: ['email', string()],
  alternateEmails: ['alternate_emails', array(string())],
  firstName: ['first_name', string()],
  lastName: ['last_name', string()],
  addressLine1: ['address_line_1', string()],
  addressLine2: ['address_line_2', string()],
  city: ['city', string()],
  stateProvinceRegion: ['state_province_region', string()],
  postalCode: ['postal_code', number()],
  country: ['country', string()],
  listIds: ['list_ids', optional(array(string()))],
  customFields: ['custom_fields', lazy(() => customFields2Schema)],
  segmentIds: ['segment_ids', optional(array(string()))],
});
