/**
 * Twilio SendGrid v3 APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { From1, from1Schema } from './from1';
import { ReplyTo1, replyTo1Schema } from './replyTo1';

export interface SenderID {
  /** A nickname for the sender identity. Not used for sending. */
  nickname: string;
  from?: From1;
  replyTo?: ReplyTo1;
  /** The physical address of the sender identity. */
  address: string;
  /** Additional sender identity address information. */
  address2?: string;
  /** The city of the sender identity. */
  city: string;
  /** The state of the sender identity. */
  state?: string;
  /** The zipcode of the sender identity. */
  zip?: string;
  /** The country of the sender identity. */
  country: string;
  /** The unique identifier of the sender identity. */
  id?: number;
  /** If the sender identity is verified or not. Only verified sender identities can be used to send email. */
  verified?: boolean;
  /** The time the sender identity was last updated. */
  updatedAt?: number;
  /** The time the sender identity was created. */
  createdAt?: number;
  /** True when the sender id is associated to a campaign in the Draft, Scheduled, or In Progress status. You cannot update or delete a locked sender identity. */
  locked?: boolean;
}

export const senderIDSchema: Schema<SenderID> = object({
  nickname: ['nickname', string()],
  from: ['from', optional(lazy(() => from1Schema))],
  replyTo: ['reply_to', optional(lazy(() => replyTo1Schema))],
  address: ['address', string()],
  address2: ['address_2', optional(string())],
  city: ['city', string()],
  state: ['state', optional(string())],
  zip: ['zip', optional(string())],
  country: ['country', string()],
  id: ['id', optional(number())],
  verified: ['verified', optional(boolean())],
  updatedAt: ['updated_at', optional(number())],
  createdAt: ['created_at', optional(number())],
  locked: ['locked', optional(boolean())],
});
