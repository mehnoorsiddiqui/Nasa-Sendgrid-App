/**
 * Twilio SendGrid v3 APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { ARecord, aRecordSchema } from './aRecord';
import { User, userSchema } from './user';

export interface ReverseDNS {
  /** The ID of the Reverse DNS. */
  id: number;
  /** The IP address that this Reverse DNS was created for. */
  ip: string;
  /** The reverse DNS record for the IP address. This points to the Reverse DNS subdomain. */
  rdns: string;
  /** The users who are able to send mail from the IP address. */
  users: User[];
  /** The subdomain created for this reverse DNS. This is where the rDNS record points. */
  subdomain?: string;
  /** The root, or sending, domain. */
  domain: string;
  /** Indicates if this is a valid Reverse DNS. */
  valid: boolean;
  /** Indicates if this Reverse DNS was created using the legacy whitelabel tool. If it is a legacy whitelabel, it will still function, but you'll need to create a new Reverse DNS if you need to update it. */
  legacy: boolean;
  /** A Unix epoch timestamp representing the last time of a validation attempt. */
  lastValidationAttemptAt?: number;
  aRecord: ARecord;
}

export const reverseDNSSchema: Schema<ReverseDNS> = object({
  id: ['id', number()],
  ip: ['ip', string()],
  rdns: ['rdns', string()],
  users: ['users', array(lazy(() => userSchema))],
  subdomain: ['subdomain', optional(string())],
  domain: ['domain', string()],
  valid: ['valid', boolean()],
  legacy: ['legacy', boolean()],
  lastValidationAttemptAt: ['last_validation_attempt_at', optional(number())],
  aRecord: ['a_record', lazy(() => aRecordSchema)],
});
