/**
 * Twilio SendGrid v3 APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  GlobalErrorResponseSchema1Error,
} from '../errors/globalErrorResponseSchema1Error';
import { V3MailSend500Error1Error } from '../errors/v3MailSend500Error1Error';
import {
  EnforcedTLSRequestResponse,
  enforcedTLSRequestResponseSchema,
} from '../models/enforcedTLSRequestResponse';
import { optional, string } from '../schema';
import { BaseController } from './baseController';

export class SettingsEnforcedTLSController extends BaseController {
  /**
   * **This endpoint allows you to retrieve your current Enforced TLS settings.**
   *
   * The Enforced TLS settings specify whether or not the recipient is required to support TLS or have a
   * valid certificate.
   *
   * If either `require_tls` or `require_valid_cert` is set to `true`, the recipient must support TLS 1.1
   * or higher or have a valid certificate. If these conditions are not met, Twilio SendGrid will drop
   * the message and send a block event with “TLS required but not supported” as the description.
   *
   * @param onBehalfOf   Example: The subuser's username. This header generates the API call as if the
   *                               subuser account was making the call.
   * @return Response from the API call
   */
  async gETUserSettingsEnforcedTls(
    onBehalfOf?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<EnforcedTLSRequestResponse>> {
    const req = this.createRequest('GET', '/v3/user/settings/enforced_tls');
    const mapped = req.prepareArgs({
      onBehalfOf: [onBehalfOf, optional(string())],
    });
    req.header('on-behalf-of', mapped.onBehalfOf);
    req.throwOn(401, GlobalErrorResponseSchema1Error, '');
    req.throwOn(403, GlobalErrorResponseSchema1Error, '');
    req.throwOn(404, GlobalErrorResponseSchema1Error, '');
    req.throwOn(500, V3MailSend500Error1Error, '');
    return req.callAsJson(enforcedTLSRequestResponseSchema, requestOptions);
  }

  /**
   * **This endpoint allows you to update your Enforced TLS settings.**
   *
   * To require TLS from recipients, set `require_tls` to `true`. If either `require_tls` or
   * `require_valid_cert` is set to `true`, the recipient must support TLS 1.1 or higher or have a valid
   * certificate. If these conditions are not met, Twilio SendGrid will drop the message and send a block
   * event with “TLS required but not supported” as the description.
   *
   * > Twilio SendGrid supports TLS 1.1 and higher and does not support older versions of TLS due to
   * security vulnerabilities.
   *
   * @param onBehalfOf   Example: The subuser's username. This header generates
   *                                                          the API call as if the subuser account was making the
   *                                                          call.
   * @param body
   * @return Response from the API call
   */
  async pATCHUserSettingsEnforcedTls(
    onBehalfOf?: string,
    body?: EnforcedTLSRequestResponse,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<EnforcedTLSRequestResponse>> {
    const req = this.createRequest('PATCH', '/v3/user/settings/enforced_tls');
    const mapped = req.prepareArgs({
      onBehalfOf: [onBehalfOf, optional(string())],
      body: [body, optional(enforcedTLSRequestResponseSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.header('on-behalf-of', mapped.onBehalfOf);
    req.json(mapped.body);
    req.throwOn(401, GlobalErrorResponseSchema1Error, '');
    req.throwOn(403, GlobalErrorResponseSchema1Error, '');
    req.throwOn(404, GlobalErrorResponseSchema1Error, '');
    req.throwOn(500, V3MailSend500Error1Error, '');
    return req.callAsJson(enforcedTLSRequestResponseSchema, requestOptions);
  }
}
